CREATE TABLE EMPLEADO(
    ID_EMPLEADO NUMBER(4) CONSTRAINT EMPLEADO_PK PRIMARY KEY,
    NOMBRE VARCHAR2(25) CONSTRAINT EMP_NOM_NN NOT NULL,
    A_PATERNO VARCHAR2(20) CONSTRAINT EMP_AP_NN NOT NULL,
    A_MATERNO VARCHAR2(20) CONSTRAINT EMP_AM_NN NOT NULL,
    MAIL VARCHAR2(25) CONSTRAINT EMP_MAIL_NN NOT NULL,
    TELEFONO NUMBER(10),
    TURNO VARCHAR2(20) CONSTRAINT EMP_TUR_NN NOT NULL);
    
INSERT INTO EMPLEADO VALUES(1, 'LUIS', 'SANCHEZ', 'PEREZ', 'luissp@gmail.com', 9871237744, 'matutino');
INSERT INTO EMPLEADO VALUES(2, 'MONICA', 'RODRIGUEZ', 'SOTO', 'MON-rs@gmail.com', 9812437788, 'matutino');
INSERT INTO EMPLEADO VALUES(3, 'GUADALUPE', 'RODARTE', 'PEREZ', 'gpe278@gmail.com', 6181237744, 'vespertino');
INSERT INTO EMPLEADO VALUES(4, 'RUPERTO', 'ROBLES', 'FLORES', 'rupisf@gmail.com', 4571235622, 'vespertino');
INSERT INTO EMPLEADO VALUES(5, 'ROSA', 'ESPARZA', 'LOPEZ', 'rosyesp21@gmail.com', 4331237744, 'matutino');
UPDATE EMPLEADO SET TELEFONO = 5561238811 WHERE ID_EMPLEADO = 2;

CREATE TABLE PRODUCTO(
    ID_PRODUCTO NUMBER(4) CONSTRAINT PRODUCTO_PK PRIMARY KEY,
    NOMBRE VARCHAR2(25) CONSTRAINT PRO_NOM_NN NOT NULL,
    TIPO VARCHAR2(20),
    CANTIDAD NUMBER(3) CONSTRAINT PRO_CAN_NN NOT NULL,
    PRECIO NUMBER(6,2) CONSTRAINT pro_PRE_NN NOT NULL);
    
INSERT INTO PRODUCTO VALUES(1, 'JACK_DANIELS', 'VINOS_Y_LICORES', 2, 345.00);
INSERT INTO PRODUCTO VALUES(2, 'COCA_COLA', 'BEBIDA', 5, 15.00);
INSERT INTO PRODUCTO VALUES(3, 'PINZAS', 'HERRAMIENTA', 1, 150.00);
INSERT INTO PRODUCTO VALUES(4, 'LECHE_LALA', 'CREMERIA', 5, 21.50);
INSERT INTO PRODUCTO VALUES(5, 'SAL', 'ABARROTES', 1, 18.70);
UPDATE PRODUCTO SET TIPO = 'ABARROTES' WHERE ID_PRODUCTO = 2;
    
CREATE TABLE VENTA(
    NO_VENTA NUMBER(4) CONSTRAINT VENTA_PK PRIMARY KEY,
    ID_EMPLEADO NUMBER(4) CONSTRAINT EMPLEADO_NN NOT NULL,
    ID_PRODUCTO NUMBER(4) CONSTRAINT PRODUCTO_NN NOT NULL,
    
    CONSTRAINT EMPLEADO_VEN_FK FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO),
    CONSTRAINT PRODUCTO_VEN_FK FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO));
    
INSERT INTO VENTA VALUES(1,  2, 3);
INSERT INTO VENTA VALUES(2, 1, 5);
INSERT INTO VENTA VALUES(3, 4, 1);
INSERT INTO VENTA VALUES(4, 2, 5);
INSERT INTO VENTA VALUES(5, 5, 4);

DELETE FROM VENTA WHERE NO_VENTA = 5;

CREATE TABLE FACTURA(
    NUM_FACTURA NUMBER(4) CONSTRAINT FACTURA_PK PRIMARY KEY,
    IVA NUMBER(4,2) CONSTRAINT FAC_IVA_NN NOT NULL,
    FECHA DATE CONSTRAINT FAC_FECH_NN NOT NULL,
    SUBTOTAL NUMBER(6,2) CONSTRAINT FAC_SUB_NN NOT NULL);
    
INSERT INTO FACTURA VALUES(0001, 12.50, '18/11/2018',  150.00);
INSERT INTO FACTURA VALUES(0002, 13.75, '18/10/2018',  18.70);
INSERT INTO FACTURA VALUES(0003, 14.00, '18/11/2018',  690.00);
INSERT INTO FACTURA VALUES(0004, 13.75, '18/11/2018',  18.70);
INSERT INTO FACTURA VALUES(0005, 15.00, '18/11/2018',  107.50);
UPDATE FACTURA SET FECHA = '22/09/2018' WHERE NUM_FACTURA = 0004;

CREATE TABLE GENERA(
    NO_VENTA NUMBER(4) CONSTRAINT GE_NV_NN NOT NULL,
    NUM_FACTURA NUMBER(4) CONSTRAINT GE_NF_NN NOT NULL,
   
    CONSTRAINT GENERA_PK PRIMARY KEY (NO_VENTA, NUM_FACTURA),
    CONSTRAINT GE_NV_FK FOREIGN KEY (NO_VENTA) REFERENCES VENTA(NO_VENTA),
    CONSTRAINT GE_NF_FK FOREIGN KEY (NUM_FACTURA) REFERENCES FACTURA(NUM_FACTURA));
    
INSERT INTO GENERA VALUES(1,0001);
INSERT INTO GENERA VALUES(2,0002);
INSERT INTO GENERA VALUES(3,0003);
INSERT INTO GENERA VALUES(4,0004);
INSERT INTO GENERA VALUES(1,0005);

DELETE FROM GENERA WHERE NUM_FACTURA = 0005;

CREATE TABLE PROVEEDOR(
    ID_PROVEEDOR NUMBER(4) CONSTRAINT PROVEEDOR_PK PRIMARY KEY,
    NOMBRE_EMPRESA VARCHAR2(25) CONSTRAINT PROV_NOM_NN NOT NULL,
    MAIL VARCHAR2(25) CONSTRAINT PROV_MAIL_NN NOT NULL,
    TELEFONO NUMBER(10) CONSTRAINT PROV_TELE_NN NOT NULL,
    ESTADO VARCHAR2(25) CONSTRAINT PROV_EST_NN NOT NULL,
    CIUDAD VARCHAR2(25) CONSTRAINT PROV_CIU_NN NOT NULL,
    CALLE VARCHAR2(25) CONSTRAINT PROV_CAL_NN NOT NULL,
    NUMERO NUMBER(3) CONSTRAINT PROV_NUM_NN NOT NULL);

INSERT INTO PROVEEDOR VALUES(1, 'COCA_COLA', 'www.coca_cola.com', 2557881251, 'ZACATECAS', 'ZACATECAS', 'HIDALGO', 123); 
INSERT INTO PROVEEDOR VALUES(2, 'TRUPPER', 'www.TRUPER.com', 2884881251, 'GUANAJUATO', 'LEON', 'MORELOS', 513);
INSERT INTO PROVEEDOR VALUES(3, 'LALA', 'www.LA-LA.com', 8927881251, 'DURANGO', 'DURANGO', '20 DE NOVIEMBRE', 246);
INSERT INTO PROVEEDOR VALUES(4, 'SABRITAS', 'www.SABRITAS.com.mx', 0120881251, 'ZACATECAS', 'ZACATECAS', 'GONZALES ORTEGA', 209); 
INSERT INTO PROVEEDOR VALUES(5, 'BIMBO', 'www.BIMBO.com', 2557881251, 'ZACATECAS', 'ZACATECAS', 'LOPEZ VELARDE', 132); 
INSERT INTO PROVEEDOR VALUES(6, 'VINOS EL MEJOR', 'www.V_EL_MEJOR.com', 6182221251, 'DURANGO', 'VICENTE GUERRERO', 'ARBOLEDAS', 205); 
INSERT INTO PROVEEDOR VALUES(7, 'SAMS', 'www.SAMS.com', 7772311253, 'ZACATECAS', 'ZACATECAS', 'LOPEZ VELARDE', 503); 
UPDATE PROVEEDOR SET CALLE = 'MERCADO', NUMERO = 115 WHERE ID_PROVEEDOR = 7;

CREATE TABLE SUBMINISTRO(
    ID_SUBMINISTRO NUMBER(4) CONSTRAINT SUBMINISTRO_PK PRIMARY KEY,
    ID_PROVEEDOR NUMBER(4) CONSTRAINT PROVEEDOR_NN NOT NULL,
    ID_PRODUCTO NUMBER(4) CONSTRAINT PRODUCTO_S_NN NOT NULL,
    
    CONSTRAINT PROVEEDOR_SUB_FK FOREIGN KEY (ID_PROVEEDOR) REFERENCES PROVEEDOR(ID_PROVEEDOR),
    CONSTRAINT PRODUCTO_SUB_FK FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO));

INSERT INTO SUBMINISTRO VALUES(1, 1, 2); 
INSERT INTO SUBMINISTRO VALUES(2, 1, 3);
UPDATE SUBMINISTRO SET ID_PROVEEDOR = 2 WHERE id_subministro = 2;
INSERT INTO SUBMINISTRO VALUES(3, 3, 4);
INSERT INTO SUBMINISTRO VALUES(4, 6, 1);
INSERT INTO SUBMINISTRO VALUES(5, 7, 5);
DELETE FROM SUBMINISTRO WHERE id_producto = 5;

CREATE TABLE AREA(
    NO_AREA NUMBER(1) CONSTRAINT AREA_PK PRIMARY KEY,
    NOMBRE_DEPARTAMENTO VARCHAR2(25) CONSTRAINT AREA_NOMD_NN NOT NULL,
    NOMBRE_ENCARGADO VARCHAR2(25) CONSTRAINT AREA_NOME_NN NOT NULL,
    A_PATERNO VARCHAR2(25) CONSTRAINT AREA_AP_NN NOT NULL,
    A_MATERNO VARCHAR2(25) CONSTRAINT AREA_AM_NN NOT NULL);


INSERT INTO AREA VALUES(1, 'FERRETERIA', 'JUAN', 'AGUILERA', 'SOLIS'); 
INSERT INTO AREA VALUES(2, 'ABARROTES', 'ISABEL', 'PEREZ', 'GONZALES'); 
INSERT INTO AREA VALUES(3, 'CREMERIA', 'LUISA', 'PEREZ', 'ROBLES');
INSERT INTO AREA VALUES(4, 'VINOS Y LICORES', 'ISRAEL', 'PEREZ', 'GONZALES');
UPDATE AREA SET nombre_encargado = 'NANCY', a_paterno = 'GARCIA', a_materno = 'MACIAS' WHERE no_area = 1;

CREATE TABLE ESTANTE(
    NO_ESTANTE NUMBER(3) CONSTRAINT ESTANTE_PK PRIMARY KEY,
    PASILLO NUMBER(2) CONSTRAINT EST_PAS_NN NOT NULL,
    CAPACIDAD NUMBER(4) CONSTRAINT EST_CAP_NN NOT NULL); 
    
INSERT INTO ESTANTE VALUES(001, 3, 50); 
INSERT INTO ESTANTE VALUES(002, 4, 15); 
INSERT INTO ESTANTE VALUES(003, 1, 100); 
INSERT INTO ESTANTE VALUES(004, 2, 70); 
INSERT INTO ESTANTE VALUES(005, 3, 56); 

UPDATE ESTANTE SET CAPACIDAD = 80 WHERE no_estante = 005;
    
CREATE TABLE EXISTENCIA(
    ID_EXISTENCIA NUMBER(4) CONSTRAINT EXISTENCIA_PK PRIMARY KEY,
    NO_AREA NUMBER(1) CONSTRAINT AREA_NN NOT NULL,
    NO_ESTANTE NUMBER(3) CONSTRAINT ESTANTE_NN NOT NULL,
    
    CONSTRAINT AREA_EXI_FK FOREIGN KEY (NO_AREA) REFERENCES AREA(NO_AREA),
    CONSTRAINT ESTANTE_EXI_FK FOREIGN KEY (NO_ESTANTE) REFERENCES ESTANTE(NO_ESTANTE));

INSERT INTO EXISTENCIA VALUES(1, 1, 003); 
INSERT INTO EXISTENCIA VALUES(2, 3, 002); 
INSERT INTO EXISTENCIA VALUES(3, 4, 001); 
INSERT INTO EXISTENCIA VALUES(4, 4, 005);
INSERT INTO EXISTENCIA VALUES(5, 2, 004);
DELETE FROM EXISTENCIA WHERE no_estante = 004;

UPDATE EXISTENCIA SET no_estante = 0001 WHERE id_existencia = 2;
UPDATE EXISTENCIA SET no_estante = 0002 WHERE id_existencia = 3;
 CREATE TABLE UBICACION(
    ID_UBICACION NUMBER(4) CONSTRAINT UBICACION_PK PRIMARY KEY,
    ID_EXISTENCIA NUMBER(4) CONSTRAINT EXISTENCIA_NN NOT NULL,
    ID_PRODUCTO NUMBER(4) CONSTRAINT PRODUCTO_UB_NN NOT NULL,
    
    CONSTRAINT EXISTENCIA_UB_FK FOREIGN KEY (ID_EXISTENCIA) REFERENCES EXISTENCIA(ID_EXISTENCIA),
    CONSTRAINT PRODUCTO_UBI_FK FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO)); 
    
INSERT INTO UBICACION VALUES(0001, 1 , 1);
UPDATE UBICACION SET ID_PRODUCTO = 3 WHERE id_UBICACION = 0001;
INSERT INTO UBICACION VALUES(0002, 5 , 2);
INSERT INTO UBICACION VALUES(0003, 4 , 1);
INSERT INTO UBICACION VALUES(0004, 2 , 4);
INSERT INTO UBICACION VALUES(0005, 5 , 5);

--1. Consultar el nombre de completo de los empleados que han realizado al menos una venta.
SELECT NOMBRE, A_PATERNO, A_MATERNO FROM EMPLEADO E JOIN VENTA V ON E.ID_EMPLEADO = V.ID_EMPLEADO
GROUP BY NOMBRE, A_PATERNO, A_MATERNO HAVING COUNT (*)>=1;

--2. Consultar el nombre de los productos vendidos.
SELECT NOMBRE AS Nombre_Producto FROM PRODUCTO WHERE ID_PRODUCTO IN (SELECT ID_PRODUCTO FROM VENTA);

--3. Consultar el nombre de los productos que han sido vendidos e incluir el nombre completo del empleado que los vendió.
SELECT P.NOMBRE AS PRODUCTO, E.NOMBRE, E.A_PATERNO, E.A_MATERNO
                FROM PRODUCTO P JOIN VENTA V ON P.ID_PRODUCTO=V.ID_PRODUCTO
                JOIN empleado E ON E.ID_EMPLEADO = V.ID_EMPLEADO;
                
--5. Consultar el nombre de los productos que han sido subministrados.
SELECT P.NOMBRE FROM PRODUCTO P JOIN SUBMINISTRO S ON p.id_producto = s.id_producto;

--6. Consultar los datos generales de todas las facturas
SELECT num_factura, IVA, FECHA, SUBTOTAL FROM FACTURA;

--7. Consultar el nombre completo de los encargados de area en una sola columna
SELECT A_PATERNO || ' ' || A_MATERNO || ' ' || nombre_encargado AS "NOMBRE COMPLETO" FROM AREA;

--8. Consultar los datos generales de el proveedor coca-cola
SELECT * FROM PROVEEDOR WHERE NOMBRE_EMPRESA = 'COCA_COLA';

--9.Consultar el total de ventas realizadas.
SELECT COUNT(*) AS TOTAL_DE_VENTAS FROM VENTA;

--10. Consultar el total de ventas que ha hecho cada empleado.
SELECT NOMBRE, A_PATERNO,A_MATERNO, COUNT(*) AS TOTAL_DE_VENTAS
FROM EMPLEADO E JOIN VENTA V 
     ON e.id_empleado= v.id_empleado
GROUP BY NOMBRE, A_PATERNO,A_MATERNO; 

--11.- Consultar el nombre de los empleados que no han vendido  nada
SELECT A_PATERNO ||' '|| A_MATERNO ||' '|| NOMBRE AS NOMBRE_COMPLETO FROM EMPLEADO WHERE ID_EMPLEADO NOT IN (SELECT ID_EMPLEADO FROM VENTA);

--12.- Consultar las ventas que no hayan sido facturadas
SELECT NO_VENTA FROM VENTA WHERE NO_VENTA NOT IN (SELECT NO_VENTA FROM GENERA);

--13.- Mostrar los estantes con una capacidad mayor a 70.
select No_estante from estante where capacidad > 70;

--15. Consultar al vendedor del mes (El empleado que más vendio en un determinado mes).
SELECT  E.NOMBRE, E.A_PATERNO, E.A_MATERNO
FROM EMPLEADO E JOIN VENTA V ON E.ID_EMPLEADO = V.ID_EMPLEADO
JOIN GENERA G ON V.NO_VENTA = g.no_venta JOIN FACTURA F 
ON g.num_factura = f.num_factura
WHERE FECHA BETWEEN '15/10/18' AND '15/11/18'
GROUP BY  E.NOMBRE, E.A_PATERNO, E.A_MATERNO
HAVING COUNT(*) = 
(
SELECT  MAX(COUNT (*))
FROM EMPLEADO E JOIN VENTA V ON E.ID_EMPLEADO = V.ID_EMPLEADO
JOIN GENERA G ON V.NO_VENTA = g.no_venta JOIN FACTURA F 
ON g.num_factura = f.num_factura
WHERE FECHA BETWEEN '15/10/18' AND '15/11/18'
GROUP BY  E.NOMBRE, E.A_PATERNO, E.A_MATERNO
);

--16. Consultar nombre los proveedores que no han subministrado productos.
SELECT NOMBRE_EMPRESA FROM PROVEEDOR WHERE ID_PROVEEDOR NOT IN (SELECT id_proveedor FROM subministro);

--17. Consultar los datos generales de las facturas (todas la tablas que se relacionan con la tabla factura).
SELECT e.*, p.*, v.*, g.*, f.*
FROM empleado e JOIN  venta v ON e.id_empleado = v.no_venta      
              JOIN producto p ON v.id_producto = p.id_producto
              JOIN genera g ON g.no_venta = v.no_venta
              JOIN factura f ON f.num_factura = g.no_venta;

--18. Consultar los datos generales de las subministros (todas la tablas que se relacionan con la tabla submnistro).
SELECT p.*, prov.*, s.*
FROM  producto p JOIN subministro S ON P.id_producto = S.id_producto
              JOIN proveedor PROV ON prov.id_proveedor = s.id_proveedor;
              
--19. Consultar los datos generales de las ventas (todas la tablas que se relacionan con la tabla venta).
SELECT e.*, p.*, v.*
FROM  producto p JOIN venta v ON P.id_producto = v.id_producto
              JOIN empleado e ON v.id_empleado = e.id_empleado;
              
 --20. Mostrar los nombres de las areas que empiecen con F.
SELECT NOMBRE_DEPARTAMENTO FROM AREA WHERE nombre_departamento LIKE 'F%';

--21.- Mostrar los proveedores cuyo id está entrE 2 Y 5.
SELECT * FROM proveedor WHERE id_proveedor BETWEEN 2 AND 5;

--22. Consultar al peor vendedor del mes (El empleado que menos vendio en un determinado mes).

SELECT  E.NOMBRE, E.A_PATERNO, E.A_MATERNO
FROM EMPLEADO E JOIN VENTA V ON E.ID_EMPLEADO = V.ID_EMPLEADO
JOIN GENERA G ON V.NO_VENTA = g.no_venta JOIN FACTURA F 
ON g.num_factura = f.num_factura
WHERE FECHA BETWEEN '15/10/18' AND '15/11/18'
GROUP BY  E.NOMBRE, E.A_PATERNO, E.A_MATERNO
HAVING COUNT(*) = 
(
SELECT  min(COUNT (*))
FROM EMPLEADO E JOIN VENTA V ON E.ID_EMPLEADO = V.ID_EMPLEADO
JOIN GENERA G ON V.NO_VENTA = g.no_venta JOIN FACTURA F 
ON g.num_factura = f.num_factura
WHERE FECHA BETWEEN '15/10/18' AND '15/11/18'
GROUP BY  E.NOMBRE, E.A_PATERNO, E.A_MATERNO
);

--23.- Consultar las ventas que  hayan sido facturadas
SELECT NO_VENTA FROM VENTA WHERE NO_VENTA  IN (SELECT NO_VENTA FROM GENERA);

--24. Consultar nombre los proveedores que han subministrado productos.
SELECT NOMBRE_EMPRESA FROM PROVEEDOR WHERE ID_PROVEEDOR IN (SELECT id_proveedor FROM subministro);

 --25. Mostrar los nombres de las areas que terminen con a.
SELECT NOMBRE_DEPARTAMENTO FROM AREA WHERE nombre_departamento LIKE '%A';