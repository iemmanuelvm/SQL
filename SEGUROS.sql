CREATE TABLE EJEMPLO(
    CAMPO1 CHAR(3) CONSTRAINT EJEMPLO_PK PRIMARY KEY,
    CAMPO2 VARCHAR2(20)
    );
    
    DESC EJEMPLO;
    -- COMENTARIOS
    
 CREATE TABLE CLIENTE(
    ID_CLIENTE NUMBER(4) CONSTRAINT CLIENTE_PK PRIMARY KEY,
    APATERNO VARCHAR2(20) CONSTRAINT CLI_AP_NO NOT NULL,
    AMATERNO VARCHAR2(20),
    NOMBRE VARCHAR2(25) CONSTRAINT CLI_NOM_NO NOT NULL,
    TELEFONO CHAR(10),
    MUNICIPIO VARCHAR2(25) CONSTRAINT CLI_MUN_NO NOT NULL,
    EDAD NUMBER(2) CONSTRAINT CLI_EDAD_CK CHECK (EDAD >= 18)
    );
    DESC CLIENTE; 
    
INSERT INTO CLIENTE VALUES(1, 'DIAZ', 'DIAZ', 'LUIS','4921001010', 'ZACATECAS', 20); --insertar 
INSERT INTO CLIENTE VALUES(2, 'FLORES', 'FLORES', 'ALBERTO','4922002020', 'GUADALUPE', 25);
INSERT INTO CLIENTE VALUES(3, 'CONTRERAS', 'GONZALEZ', 'ELENA', '4923003030', 'GUADALUPE', 21);

SELECT * FROM CLIENTE; --ver tabla
UPDATE CLIENTE SET APATERNO = 'SOLIS' WHERE ID_CLIENTE = 2; --modificar datos
    --muestra la estructura de la tabla
    --DROP TABLE CLIENTE;
    --INSERT INTO CLIENTE VALUES();
    --SELECT * FROM CLIENTE
    --DELETE FROM CLIENTE WHERE ID_CLIENTE =3;
CREATE TABLE VEHICULO(
  NUM_SERIE CHAR(5) CONSTRAINT VEHICULO_PK PRIMARY KEY,
  MARCA VARCHAR2(30) CONSTRAINT VE_MA_NN NOT NULL,
  MODELO VARCHAR(4) CONSTRAINT VE_MO_NN NOT NULL,
  COLOR VARCHAR(20) CONSTRAINT VE_CO_NN NOT NULL,
  PLACAS VARCHAR(6),
  CAPACIDAD NUMBER(2) CONSTRAINT VE_CA_NN NOT NULL
);
DESC VEHICULO;
INSERT INTO VEHICULO VALUES('12345', 'FORD', '1995', 'AZUL', 'ZAC598', 6);
INSERT INTO VEHICULO VALUES('12346', 'NISSAN', '2004', 'ROJO', NULL, 4);
INSERT INTO VEHICULO VALUES('12347', 'FERRARI', '1980', 'ROJO', 'ZAC100', 2);
INSERT INTO VEHICULO VALUES('12348', 'MAZDA', '2016', 'ROJO', NULL, 4);
INSERT INTO VEHICULO VALUES('12349', 'LEON', '2000', 'PLATEADO', NULL, 5);

SELECT * FROM VEHICULO;
--CRACION DE RELACION
CREATE TABLE CLIENTE_VEHICULO(
  --Paso 1 Definir columnas
  ID_CLIENTE NUMBER(4) CONSTRAINT CV_IDC_NN NOT NULL,
  NUM_SERIE CHAR(5) CONSTRAINT CV_NS_NN NOT NULL,
  --Paso 2 Definir la llave primaria a esta tabla y le indicamos que esta compuesta por estos campos
  CONSTRAINT CLIENTE_VEHICULO_PK PRIMARY KEY (ID_CLIENTE, NUM_SERIE),
  --Paso 3 Definir lineas
  CONSTRAINT CLIENTE_CV_PK FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
  CONSTRAINT VEHICULO_CV_PK FOREIGN KEY (NUM_SERIE) REFERENCES VEHICULO(NUM_SERIE)
  --Paso 4 (en las agregaciones) de relacion a relacion
);
DESC CLIENTE_VEHICULO;
INSERT INTO CLIENTE_VEHICULO VALUES(1, '12345');
INSERT INTO CLIENTE_VEHICULO VALUES(2, '12346');
INSERT INTO CLIENTE_VEHICULO VALUES(3, '12347');

SELECT * FROM CLIENTE_VEHICULO;

CREATE TABLE AGENTE_VENTAS(
  ID_AGENTE NUMBER (2) CONSTRAINT AGENTE_VENTAS_PK PRIMARY KEY,
  APATERNO VARCHAR (20) CONSTRAINT AV_AP_NN NOT NULL,
  AMATERNO VARCHAR (20),
  NOMBRE VARCHAR (25) CONSTRAINT AV_NOM_NN NOT NULL,
  TELEFONO CHAR (10),
  MUNICIPIO VARCHAR (25) CONSTRAINT AV_MUN_NN NOT NULL,
  EDAD NUMBER (2) CONSTRAINT AV_EDAD_CK CHECK (EDAD >= 18),
  SALARIO NUMBER (4) CONSTRAINT AV_SAL_CK CHECK (SALARIO >= 1)
);

DESC AGENTE_VENTAS;
INSERT INTO AGENTE_VENTAS VALUES(1, 'HERNANDEZ', 'HERNANDEZ', 'PABLO', '4921011011', 'ZACATECAS', 20, 1000);
INSERT INTO AGENTE_VENTAS VALUES(2, 'RAMOS', 'RAMOS', 'MARIO', '4921011022', 'GUADALUPE', 21, 2000);
INSERT INTO AGENTE_VENTAS VALUES(3, 'MERCADO', 'MERCADO', 'MARCO', '4921011033', 'GUADALUPE', 22, 3000);

SELECT * FROM AGENTE_VENTAS;

CREATE TABLE TIPO_SEGURO(
  ID_TIPO NUMBER (1) CONSTRAINT TIPO_SEGURO_PK PRIMARY KEY,
  DESCRIPCION VARCHAR (30) CONSTRAINT TS_DES_NN NOT NULL
);

DESC TIPO_SEGURO;
INSERT INTO TIPO_SEGURO VALUES(1, 'BASICO');
INSERT INTO TIPO_SEGURO VALUES(2, 'DAÑOS A TERCEROS');
INSERT INTO TIPO_SEGURO VALUES(3, 'COBERTURA TOTAL');

SELECT * FROM TIPO_SEGURO;

CREATE TABLE POLIZA(
  ID_AGENTE NUMBER (2) CONSTRAINT PO_IDA_NN NOT NULL,
  ID_TIPO NUMBER (1) CONSTRAINT PO_IDT_NN NOT NULL,
  ID_CLIENTE NUMBER (4) CONSTRAINT PO_IDC_NN NOT NULL,
  NUM_SERIE CHAR (5) CONSTRAINT PO_NS_NN NOT NULL,
  FOLIO CHAR (6) CONSTRAINT PO_FO_NN NOT NULL,
  COSTO NUMBER (6,2) CONSTRAINT PO_CO_NN NOT NULL,
  FECHA_EMISION DATE CONSTRAINT PO_FE_NN NOT NULL,
  FECHA_VENCIMIENTO DATE CONSTRAINT PO_FV_NN NOT NULL,
  
  CONSTRAINT POLIZA_PK PRIMARY KEY (FOLIO),
  CONSTRAINT AV_POLIZA_FK FOREIGN KEY (ID_AGENTE) REFERENCES AGENTE_VENTAS(ID_AGENTE),
  CONSTRAINT TS_POLIZA_FK FOREIGN KEY (ID_TIPO) REFERENCES TIPO_SEGURO(ID_TIPO),
  CONSTRAINT CV_POLIZA_FK FOREIGN KEY (ID_CLIENTE, NUM_SERIE) REFERENCES CLIENTE_VEHICULO(ID_CLIENTE, NUM_SERIE)
);

DESC POLIZA;
INSERT INTO POLIZA VALUES(1, 1, 1, '12345', '000001', 5000, '11/8/2016', '11/8/2018');
INSERT INTO POLIZA VALUES(2, 1, 2, '12346', '000002', 5000, '12/9/2016', '11/8/2018');
INSERT INTO POlIZA VALUES(3, 2, 3, '12347', '000003', 7000, '13/10/2016', '11/8/2018');

SELECT * FROM POLIZA;

CREATE TABLE AJUSTADOR(
  ID_AJUSTADOR NUMBER (2) CONSTRAINT AJUSTADOR_PK PRIMARY KEY,
  APATERNO VARCHAR2 (20) CONSTRAINT AJ_AP_NN NOT NULL,
  AMATERNO VARCHAR2 (20),
  NOMBRE VARCHAR2 (25) CONSTRAINT AJ_NOM_NN NOT NULL,
  TELEFONO CHAR (10),
  MUNICIPIO VARCHAR2 (25) CONSTRAINT AJ_MUN_NN NOT NULL,
  EDAD NUMBER (2) CONSTRAINT AJ_EDAD_CK CHECK (EDAD >=18),
  SALARIO NUMBER (4) CONSTRAINT AJ_SAL_NN NOT NULL 
);

DESC AJUSTADOR;
INSERT INTO AJUSTADOR VALUES(1, 'FLORES', 'FLORES', 'JOSE', '4922009010', 'ZACATECAS', 20, 5100);   
INSERT INTO AJUSTADOR VALUES(2, 'PACHECO', 'PACHECO', 'MARTIN', '4922009898', 'ZACATECAS', 21, 5200);
INSERT INTO AJUSTADOR VALUES(3, 'SOTO', 'SOTO', 'ANTONIO','4921223456', 'GUADALUPE', 22, 5300);
   
SELECT * FROM AJUSTADOR;

CREATE TABLE TIPO_ACCIDENTE(
  FOLIO CHAR (6) CONSTRAINT FOLIO_PK PRIMARY KEY,
  TIPO_ACCIDENTE VARCHAR2 (50) CONSTRAINT TA_TA_NN NOT NULL,
  LUGAR_ACCIDENTE VARCHAR (50) CONSTRAINT LA_TA_NN NOT NULL,
  DESCRIPCION_ACCIDENTE VARCHAR (50) CONSTRAINT DA_TA_NN NOT NULL,
  FECHA_ACCIDENTE  DATE CONSTRAINT FA_TA_NN NOT NULL
);

DESC TIPO_ACCIDENTE;
INSERT INTO TIPO_ACCIDENTE VALUES('ABC123','VOLCADURA','CARRETERA GUADALAJARA','PERDIDA TOTAL','12/9/16');
INSERT INTO TIPO_ACCIDENTE VALUES('YTU789','CHOQUE','CENTRO ZAC','DAÑO FRONTAL','22/10/16');
INSERT INTO TIPO_ACCIDENTE VALUES('ZXY987','EXPLOSION','TRANSITO PESADO','PERDIDA TOTAL','29/12/16');

SELECT * FROM TIPO_ACCIDENTE;

CREATE TABLE ACCIDENTE(
   FOLIO_ACCIDENTE CHAR (6) CONSTRAINT ACC_FA_NN NOT NULL,
   ID_AJUSTADOR NUMBER (2) CONSTRAINT ACC_AJ_NN NOT NULL,
   FOLIO CHAR (6) CONSTRAINT ACC_FO_NN NOT NULL,
   ID_TIPO NUMBER (1) CONSTRAINT ACC_TS_NN NOT NULL,
   ID_CLIENTE NUMBER (4) CONSTRAINT ACC_CL_NN NOT NULL,
   NUM_SERIE CHAR (5) CONSTRAINT ACC_NS_NN NOT NULL,
   
   CONSTRAINT ACCIDENTE_PK PRIMARY KEY (FOLIO_ACCIDENTE),
   CONSTRAINT AJ_ACCIDENTE_FK FOREIGN KEY (ID_AJUSTADOR) REFERENCES AJUSTADOR(ID_AJUSTADOR),
   CONSTRAINT FO_ACCIDENTE_FK FOREIGN KEY (FOLIO) REFERENCES POLIZA(FOLIO),
   CONSTRAINT TS_ACCIDENTE_FK FOREIGN KEY (ID_TIPO) REFERENCES TIPO_SEGURO(ID_TIPO),
   CONSTRAINT CV_ACCIDENTE_FK FOREIGN KEY (ID_CLIENTE,NUM_SERIE) REFERENCES CLIENTE_VEHICULO(ID_CLIENTE,NUM_SERIE)
);

DESC ACCIDENTE;
INSERT INTO ACCIDENTE VALUES('ABC123', 1, '000001', '1', 1, '12345');
INSERT INTO ACCIDENTE VALUES('ZXY987', 2, '000002', '1', 2, '12346');   

SELECT * FROM ACCIDENTE;


CREATE TABLE CAJERO(
  ID_CAJERO NUMBER (2) CONSTRAINT CAJERO_PK PRIMARY KEY,
  APATERNO VARCHAR2 (20) CONSTRAINT CA_AP_NN NOT NULL,
  AMATERNO VARCHAR2 (20),
  NOMBRE VARCHAR2 (25) CONSTRAINT CA_NOM_NN NOT NULL,
  TELEFONO CHAR (10),
  EDAD NUMBER (2) CONSTRAINT CA_EDAD_CK CHECK (EDAD >=18),
  SALARIO NUMBER (4) CONSTRAINT CA_SAL_NN NOT NULL 
);

DESC CAJERO;
INSERT INTO CAJERO VALUES(1, 'LOPEZ', 'LOPEZ', 'ANA', '4925005050', 43, 5000);
INSERT INTO CAJERO VALUES(2, 'MATEOS', 'MATEOS', 'SONIA', '4926006060', 28, 2000);
   
SELECT * FROM CAJERO;

CREATE TABLE PAGO(
   FOLIO_PAGO CHAR (6) CONSTRAINT PAGO_FP_NN NOT NULL,
   ID_CAJERO NUMBER (2) CONSTRAINT PAGO_CA_NN NOT NULL,
   FOLIO CHAR (6) CONSTRAINT PAGO_FO_NN NOT NULL,
   ID_TIPO NUMBER (1) CONSTRAINT PAGO_TS_NN NOT NULL,
   ID_CLIENTE NUMBER (4) CONSTRAINT PAGO_CL_NN NOT NULL,
   NUM_SERIE CHAR (5) CONSTRAINT PAGO_NS_NN NOT NULL,
   
   CONSTRAINT PAGO_PK PRIMARY KEY (FOLIO_PAGO),
   CONSTRAINT CA_PAGO_FK FOREIGN KEY (ID_CAJERO) REFERENCES CAJERO(ID_CAJERO),
   CONSTRAINT FO_PAGO_FK FOREIGN KEY (FOLIO) REFERENCES POLIZA(FOLIO),
   CONSTRAINT CV_PAGO_FK FOREIGN KEY (ID_CLIENTE,NUM_SERIE) REFERENCES CLIENTE_VEHICULO(ID_CLIENTE,NUM_SERIE)
   );
   
   DESC PAGO;
INSERT INTO PAGO VALUES('PA0001', 1, '000001', '1', 1, '12345');
INSERT INTO PAGO VALUES('PA0002', 2, '000002', '1', 2, '12346');
  
SELECT * FROM PAGO;
   
   CREATE TABLE MECANICO(
  ID_MECANICO NUMBER (2) CONSTRAINT MECANICO_PK PRIMARY KEY,
  APATERNO VARCHAR2 (20) CONSTRAINT ME_AP_NN NOT NULL,
  AMATERNO VARCHAR2 (20),
  NOMBRE VARCHAR2 (25) CONSTRAINT ME_NOM_NN NOT NULL,
  ESPECIALIZACION VARCHAR (30) CONSTRAINT ME_ES_NN NOT NULL, 
  TELEFONO CHAR (10),
  EDAD NUMBER (2) CONSTRAINT ME_EDAD_CK CHECK (EDAD >=18),
  SALARIO NUMBER (4) CONSTRAINT ME_SAL_NN NOT NULL 
);

DESC MECANICO;
INSERT INTO MECANICO VALUES(1,'CONTRERAS','CONTRERAS','SERGIO','ALINEACION_BALANCEO','4929009090', 35, 9500);
INSERT INTO MECANICO VALUES(2,'GONZALEZ','GONZALEZ','RAFAEL','SUSPENCION','4929099090', 44, 9000);

SELECT * FROM MECANICO;

CREATE TABLE REPARACION(
   ID_MECANICO NUMBER (2) CONSTRAINT RE_ME_NN NOT NULL,
   FOLIO_ACCIDENTE CHAR (6) CONSTRAINT RE_FA_NN NOT NULL,
   FOLIO CHAR (6) CONSTRAINT RE_FO_NN NOT NULL,
   ID_TIPO NUMBER (1) CONSTRAINT RE_TS_NN NOT NULL,
   ID_CLIENTE NUMBER (4) CONSTRAINT RE_CL_NN NOT NULL,
   NUM_SERIE CHAR (5) CONSTRAINT RE_NS_NN NOT NULL,
   
   CONSTRAINT REPARACION_PK PRIMARY KEY (ID_MECANICO),
   CONSTRAINT FA_REPARACION_FK FOREIGN KEY (FOLIO_ACCIDENTE) REFERENCES ACCIDENTE(FOLIO_ACCIDENTE),
   CONSTRAINT FO_REPARACION_FK FOREIGN KEY (FOLIO) REFERENCES POLIZA(FOLIO),
   CONSTRAINT TS_REPARACION_FK FOREIGN KEY (ID_TIPO) REFERENCES TIPO_SEGURO(ID_TIPO),
   CONSTRAINT CV_REPARACION_FK FOREIGN KEY (ID_CLIENTE,NUM_SERIE) REFERENCES CLIENTE_VEHICULO(ID_CLIENTE,NUM_SERIE)
);

DESC REPARACION;
INSERT INTO REPARACION VALUES(1, 'ABC123', '000001', '1', 1, '12345');
INSERT INTO REPARACION VALUES(2, 'ZXY987', '000002', '1', 2, '12346');
   
SELECT * FROM REPARACION;

CREATE TABLE AFECTADOS(
  NUM_AFECTADO NUMBER (2) CONSTRAINT AFECTADO_PK PRIMARY KEY,
  NUM_AFECTADOS NUMBER (2) CONSTRAINT NA_AF_NN NOT NULL,
  DAÑOS VARCHAR2 (20) CONSTRAINT DA_AF_NN NOT NULL,
  COSTO NUMBER (5) CONSTRAINT CO_AF_NN NOT NULL
);

DESC AFECTADOS;
INSERT INTO AFECTADOS VALUES(1, 3, 'CARROCERIA', 15000);
INSERT INTO AFECTADOS VALUES(2, 5, 'PARABRISAS', 50000);
INSERT INTO AFECTADOS VALUES(3, 4, 'DEFENSA TRASERA', 12000);
   
SELECT * FROM AFECTADOS;

CREATE TABLE DAÑOS_TERCEROS(
  NUM_AFECTADO NUMBER (2) CONSTRAINT DT_NA_NN NOT NULL,
  FOLIO_ACCIDENTE CHAR (6) CONSTRAINT DT_FA_NN NOT NULL,
  
  CONSTRAINT DT_PK PRIMARY KEY (NUM_AFECTADO),
  CONSTRAINT FA_DT_FK FOREIGN KEY (FOLIO_ACCIDENTE) REFERENCES ACCIDENTE(FOLIO_ACCIDENTE)
);

DESC DAÑOS_TERCEROS;
INSERT INTO DAÑOS_TERCEROS VALUES(1, 'ABC123');
INSERT INTO DAÑOS_TERCEROS VALUES(2, 'ZXY987');
   
SELECT * FROM DAÑOS_TERCEROS;

--1. Consultar los datos generales de todos los clientes
SELECT * FROM CLIENTE;
SELECT ID_CLIENTE, AMATERNO, APATERNO, NOMBRE FROM CLIENTE;

--2. Consultar el nombre completo de los agentes de ventas en una sola columna
SELECT APATERNO || AMATERNO || NOMBRE FROM CLIENTE;
SELECT APATERNO || ' ' || AMATERNO || ' ' || NOMBRE FROM CLIENTE;
SELECT APATERNO || ' ' || AMATERNO || ' ' || NOMBRE AS NOMBRE_COMPLETO FROM CLIENTE;
SELECT APATERNO || ' ' || AMATERNO || ' ' || NOMBRE  NOMBRE_COMPLETO FROM CLIENTE;
SELECT APATERNO || ' ' || AMATERNO || ' ' || NOMBRE AS "NOMBRE COMPLETO" FROM CLIENTE;
SELECT APATERNO || ' ' || AMATERNO || ' ' || NOMBRE AS "NOMBRE completo" FROM CLIENTE; --Deja poner el nombre de la columna en minusculas

--3. Consultar el salario anual de los agentes de venta
SELECT * FROM AGENTE_VENTAS;
SELECT APATERNO || ' ' || AMATERNO || ' ' || NOMBRE AS "NOMBRE COMPLETO", SALARIO *12 AS "SALARIO ANUAL" FROM AGENTE_VENTAS;

--4. Consultar los datos generalesde todos los vehiculos de una determinada marca
SELECT * FROM VEHICULO;
SELECT * FROM VEHICULO WHERE MARCA = 'FORD';

--5.Consultar los datos generales de los agentes de ventas cuyo salario esté entre 8000 y 10000.
SELECT * FROM AGENTE_VENTAS;
INSERT INTO AGENTE_VENTAS VALUES(4, 'MARTINEZ', 'GOMEZ','MARIA', '4921011044', 'FRESNILLO', 24, 7500);
SELECT * FROM AGENTE_VENTAS WHERE SALARIO BETWEEN 5000 AND 10000;

--6.Consultar el total de pólizas generadas.
SELECT * FROM POLIZA;
SELECT COUNT(*) AS TOTAL_DE_POLIZAS FROM POLIZA;

--7. Consultar el total de clientes registrados de cada municipio.
SELECT * FROM CLIENTE;
SELECT MUNICIPIO, COUNT(*) AS TOTAL FROM CLIENTE GROUP BY MUNICIPIO;

--8. Consultar el nombre completo de los clientes que tienen automóvil.
SELECT APATERNO || ' ' || AMATERNO || ' ' || NOMBRE AS "NOMBRE COMPLETO" FROM CLIENTE NATURAL JOIN CLIENTE_VEHICULO;
--SELECT APATERNO || ' ' || AMATERNO || ' ' || NOMBRE AS "NOMBRE COMPLETO" FROM CLIENTE C JOIN CLIENTE_VEHICULO ON C.ID_CLIENTE = CV.ID_CLIENTE;
SELECT APATERNO || ' ' || AMATERNO || ' ' || NOMBRE AS "NOMBRE COMPLETO" FROM CLIENTE C JOIN CLIENTE_VEHICULO CV ON C.ID_CLIENTE = CV.ID_CLIENTE;
--SELECT C. CLIENTE, APATERNO || ' ' || AMATERNO || ' ' || NOMBRE AS "NOMBRE COMPLETO" FROM CLIENTE C JOIN C.ID_CLIENTE ON C.ID_CLIENTE = CV.ID_CLIENTE;

--9.- Consultar el total de automoviles que tiene cada cliente 
SELECT APATERNO || ' ' || AMATERNO ||' '|| NOMBRE AS NOMBRE_COMPLETO, COUNT(*) AS TOTAL FROM CLIENTE C JOIN CLIENTE_VEHICULO CV ON C.ID_CLIENTE = CV.ID_CLIENTE GROUP BY APATERNO,AMATERNO,NOMBRE;

--10. Consultar los datos generales de los automóviles de color XXX que pertenezcan a clientes mayores de XXX años
SELECT * FROM VEHICULO;
SELECT V.* 
FROM CLIENTE C JOIN CLIENTE_VEHICULO CV ON C.ID_CLIENTE = CV.ID_CLIENTE JOIN VEHICULO V ON V.NUM_SERIE = CV.NUM_SERIE WHERE COLOR ='ROJO' AND EDAD >=18; 
--11. Consultar el total de pólizas que ha vendido cada empleado.
SELECT NOMBRE, APATERNO,AMATERNO, COUNT(*) AS TOTAL_DE_POLIZAS
FROM AGENTE_VENTAS AV JOIN POLIZA P 
     ON AV.ID_AGENTE = P.ID_AGENTE
GROUP BY NOMBRE, APATERNO,AMATERNO; 

--12. Consultar el total de pólizas emitidas por cada tipo de seguro.
SELECT DESCRIPCION AS TIPO_DE_SEGURO, COUNT(*) AS TOTAL
FROM TIPO_SEGURO T JOIN POLIZA P
      ON T.ID_TIPO = P.ID_TIPO
GROUP BY DESCRIPCION;

--13.- Consultar el nombre de los empleados que no han vendido polizas
SELECT APATERNO ||' '|| AMATERNO ||' '|| NOMBRE AS NOMBRE_COMPLETO FROM AGENTE_VENTAS WHERE ID_AGENTE NOT IN (SELECT ID_AGENTE FROM POLIZA);
  --NO
SELECT * FROM AGENTE_VENTAS WHERE ID_AGENTE NOT IN (SELECT ID_AGENTE FROM POLIZA); 
  --SI
SELECT * FROM AGENTE_VENTAS WHERE ID_AGENTE  IN (SELECT ID_AGENTE FROM POLIZA); 
  -- SI (JOIN)
SELECT DISTINCT AV.* FROM AGENTE_VENTAS AV JOIN POLIZA P ON AV.ID_AGENTE = P.ID_AGENTE;

--14. Consultar el nombre de los clientes que no tienen automóvil asignado.
SELECT * FROM CLIENTE;
SELECT * FROM CLIENTE_VEHICULO;
INSERT INTO CLIENTE VALUES(4, 'REYES', 'DIAZ', 'GUADALUPE','4921001015', 'ZACATECAS', 20);
SELECT NOMBRE, APATERNO,AMATERNO
FROM CLIENTE
WHERE ID_CLIENTE NOT IN (SELECT ID_CLIENTE FROM CLIENTE_VEHICULO);

--15. Consultar datos generales de las polizas (datos generales de todas las tablas que se relacionan con la poliza)
SELECT * FROM CLIENTE C JOIN CLIENTE_VEHICULO CV ON C.ID_CLIENTE = CV.ID_CLIENTE
JOIN POLIZA P ON CV.ID_CLIENTE = P.ID_CLIENTE AND CV.NUM_SERIE = P.NUM_SERIE;

-- El tipo de seguro contratado y las fechas de emision y vencimiento
SELECT C.APATERNO|| ' ' ||C.AMATERNO|| ' ' ||C.NOMBRE AS CLIENTE,
V.*,
AV.APATERNO|| ' ' ||AV.AMATERNO|| ' ' ||AV.NOMBRE AS AGENTE,
TS.DESCRIPCION AS TIPO_SEGURO,
P.FECHA_EMISION, P.FECHA_VENCIMIENTO
FROM CLIENTE C JOIN CLIENTE_VEHICULO CV ON  C.ID_CLIENTE = CV.ID_CLIENTE
JOIN VEHICULO V ON V.NUM_SERIE = CV.NUM_SERIE
JOIN POLIZA P ON CV.ID_CLIENTE = P.ID_CLIENTE AND CV.NUM_SERIE = P.NUM_SERIE
JOIN AGENTE_VENTAS AV ON AV.ID_AGENTE = P.ID_AGENTE
JOIN TIPO_SEGURO TS ON TS.ID_TIPO = P.ID_TIPO;

--16. Consultar el tipo de seguro que no se ha vendido.
SELECT ID_TIPO
FROM TIPO_SEGURO
WHERE ID_TIPO NOT IN (SELECT ID_TIPO FROM POLIZA);

--17. Consultar los datos generales de los accidentes.
SELECT * FROM CLIENTE C JOIN CLIENTE_VEHICULO CV ON C.ID_CLIENTE = CV.ID_CLIENTE
JOIN POLIZA P ON CV.ID_CLIENTE = P.ID_CLIENTE AND CV.NUM_SERIE = P.NUM_SERIE
JOIN ACCIDENTE A ON P.FOLIO = A.FOLIO;

--18. Consultar el total de accidentes que haya atendido cada ajustador.
SELECT ID_AJUSTADOR , COUNT(*) AS TOTAL
FROM POLIZA A JOIN ACCIDENTE AC
    ON A.FOLIO = AC.FOLIO
GROUP BY ID_AJUSTADOR;
--19. Consultar los datos generales de los vehículos y en caso de que estén asegurados, mostrar los datos generales de las pólizas.
--SELECT C.*, NUM_SERIE FROM CLIENTE C LEFT OUTER JOIN CLIENTE_VEHIULO CV ON C.ID_CLIENTE = CV.ID_CLIENTE;
--SELECT C.* FROM FOLIO C FULL OUTER JOIN POLIZA PO ON C.FOLIO = PO.POLIZA;
SELECT V.*,P.* FROM VEHICULO V LEFT OUTER JOIN CLIENTE_VEHICULO CV ON V.NUM_SERIE = CV.NUM_SERIE LEFT OUTER JOIN POLIZA P ON CV.ID_CLIENTE = P.ID_CLIENTE AND CV.NUM_SERIE = P.NUM_SERIE;

--INTRO 19. Consultar los datos generales de todos los clientes y en caso de que tengan vehiculo, mostrar NUM_SERIE
SELECT C.*, NUM_SERIE FROM CLIENTE C LEFT OUTER JOIN CLIENTE_VEHICULO CV ON C.ID_CLIENTE = CV.ID_CLIENTE; 

--20. Consultar los datos generales de los ajustadores que no han atendido accidentes.
SELECT A.*, ID_AJUSTADOR
FROM AJUSTADOR WHERE ID_AJUSTADOR NOT IN (SELECT ID_AJUSTADOR FROM ACCIDENTE);

--21. Consultar el nombre completo de los clientes que no se han accidentado.
SELECT NOMBRE,APATERNO,AMATERNO FROM CLIENTE
WHERE ID_CLIENTE NOT IN (SELECT ID_CLIENTE FROM POLIZA);

--22.Consultar los datos generales de los automóviles que más se ha accidentado.
SELECT * FROM ACCIDENTE;
SELECT * FROM POLIZA;
SELECT P.NUM_SERIE, COUNT(*) AS TOTAL
FROM POLIZA P JOIN ACCIDENTE A 
     ON P.FOLIO = A.FOLIO
     GROUP BY P.NUM_SERIE
HAVING COUNT(*) =(
SELECT MAX(COUNT(*)) AS TOTAL
FROM POLIZA P JOIN ACCIDENTE A 
     ON P.FOLIO = A.FOLIO
     GROUP BY P.NUM_SERIE);
     
--23. Consultar el nombre completo de los clientes que más automóviles tienen.
SELECT NOMBRE, APATERNO,AMATERNO, COUNT(*) AS TOTAL_Autos
FROM CLIENTE C JOIN CLIENTE_VEHICULO CV
     ON C.ID_CLIENTE = CV.ID_CLIENTE
GROUP BY NOMBRE, APATERNO,AMATERNO
HAVING COUNT(*) =(
SELECT MAX(COUNT(*)) AS TOTAL
FROM CLIENTE C JOIN CLIENTE_VEHICULO CV 
     ON C.ID_CLIENTE = CV.ID_CLIENTE
GROUP BY NOMBRE, APATERNO,AMATERNO);

--24. Consultar el nombre completo de los clientes que más se han accidentado.
SELECT P.ID_CLIENTE, COUNT(*) AS TOTAL_Accidentes
FROM POLIZA P JOIN ACCIDENTE A 
     ON P.FOLIO = A.FOLIO
     GROUP BY P.ID_CLIENTE
HAVING COUNT(*) =(
SELECT MAX(COUNT(*)) AS TOTAL
FROM POLIZA P JOIN ACCIDENTE A 
     ON P.FOLIO = A.FOLIO
     GROUP BY P.ID_CLIENTE);

--25.Consultar el nombre completo de los clientes que han tenido más de 2 seguros.
SELECT ID_CLIENTE, COUNT(*) AS TOTAL_SEGUROS
FROM POLIZA C JOIN TIPO_SEGURO CA 
     ON C.ID_TIPO = CA.ID_TIPO
     GROUP BY ID_CLIENTE
HAVING COUNT(*) =(
SELECT MAX(COUNT(*)) AS TOTAL
FROM POLIZA C JOIN TIPO_SEGURO CA 
     ON C.ID_TIPO = CA.ID_TIPO
     GROUP BY ID_CLIENTE);
--26. Consultar el nombre del agente de ventas que más seguros ha vendido.
SELECT APATERNO || ' ' || AMATERNO ||' '|| NOMBRE AS NOMBRE_COMPLETO, COUNT(*) AS TOTAL FROM AGENTE_VENTAS AV 
JOIN POLIZA P ON AV.ID_AGENTE = P.ID_AGENTE
GROUP BY APATERNO,AMATERNO,NOMBRE
HAVING COUNT(*) =
(
SELECT MAX(COUNT(*)) 
FROM AGENTE_VENTAS AV JOIN POLIZA P ON AV.ID_AGENTE = P.ID_AGENTE
GROUP BY APATERNO,AMATERNO,NOMBRE
);

SELECT MAX(COUNT(*)) FROM AGENTE_VENTAS AV JOIN POLIZA P ON AV.ID_AGENTE = P.ID_AGENTE
GROUP BY APATERNO,AMATERNO,NOMBRE;
--27. Consultar el tipo de seguro más vendido.
SELECT * FROM TIPO_SEGURO;
SELECT * FROM POLIZA;
SELECT DESCRIPCION AS TOTAL_DE_POLIZAS
FROM TIPO_SEGURO TS JOIN POLIZA P ON TS.ID_TIPO = P.ID_TIPO
GROUP BY DESCRIPCION
HAVING COUNT(*) =

(
SELECT MAX(COUNT(*)) AS TOTAL_DE_POLIZAS
FROM TIPO_SEGURO TS JOIN POLIZA P ON TS.ID_TIPO = P.ID_TIPO
GROUP BY DESCRIPCION);

--28.Consultar el nombre completo del empleado del mes (empleados que más seguros vendió en un determinado mes).

SELECT * FROM AGENTE_VENTAS;
SELECT * FROM POLIZA;
SELECT APATERNO, AMATERNO, NOMBRE
FROM AGENTE_VENTAS AV JOIN POLIZA P ON AV.ID_AGENTE = P.ID_AGENTE
WHERE FECHA_EMISION BETWEEN '13/10/16' AND '13/11/16'
GROUP BY AV.APATERNO, AV.AMATERNO, AV.NOMBRE
HAVING COUNT(*) =
(SELECT MAX (COUNT (*))
FROM AGENTE_VENTAS AV JOIN POLIZA P ON AV.ID_AGENTE = P.ID_AGENTE
WHERE FECHA_EMISION BETWEEN '13/10/16' AND '13/11/16'
GROUP BY AV.APATERNO, AV.AMATERNO, AV.NOMBRE);
--29. Consultar el tipo de seguro más accidentado.
SELECT P.ID_TIPO as tipo_seguro, COUNT(*) AS TOTAL_Accidentes
FROM POLIZA P JOIN ACCIDENTE ACC 
     ON P.FOLIO = ACC.FOLIO
     GROUP BY P.ID_TIPO
HAVING COUNT(*) =(
SELECT MAX(COUNT(*)) AS TOTAL
FROM POLIZA P JOIN ACCIDENTE ACC 
     ON P.FOLIO = ACC.FOLIO
     GROUP BY P.ID_TIPO);

--30. Consultar los datos generales de los clientes y en caso de que tengan un vehículo asegurado, mostrar los datos de las pólizas. Además, en caso de que se hayan accidentado, mostrar los datos de los accidentes.
SELECT * FROM CLIENTE C JOIN CLIENTE_VEHICULO CV ON C.ID_CLIENTE = CV.ID_CLIENTE
LEFT OUTER JOIN POLIZA P ON CV.ID_CLIENTE = P.ID_CLIENTE AND CV.NUM_SERIE = P.NUM_SERIE
LEFT OUTER JOIN ACCIDENTE A ON P.FOLIO = A.FOLIO;

--31. Consultar el nombre completo del empleado que menos pólizas ha vendido.
SELECT ID_AGENTE, COUNT(*) AS TOTAL_VENTAS
FROM POLIZA C JOIN ACCIDENTE CA 
     ON C.FOLIO = CA.FOLIO
     GROUP BY ID_AGENTE
HAVING COUNT(*) = (
SELECT MIN(COUNT(*)) AS TOTAL
FROM POLIZA C JOIN ACCIDENTE CA 
     ON C.FOLIO = CA.FOLIO
     GROUP BY ID_AGENTE);
--32. Consultar el tipo de seguro menos vendido.
SELECT * FROM TIPO_SEGURO;
SELECT * FROM POLIZA;
SELECT DESCRIPCION AS TOTAL_DE_POLIZAS
FROM TIPO_SEGURO TS JOIN POLIZA P ON TS.ID_TIPO = P.ID_TIPO
GROUP BY DESCRIPCION
HAVING COUNT(*) =

(
SELECT MIN(COUNT(*)) AS TOTAL_DE_POLIZAS
FROM TIPO_SEGURO TS JOIN POLIZA P ON TS.ID_TIPO = P.ID_TIPO
GROUP BY DESCRIPCION);

--33.

